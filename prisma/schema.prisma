generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email             String             @unique
  password          String
  fullName          String?            @default("") @map("full_name")
  profilePictureUrl String?            @map("profile_picture_url")
  themes            Theme[]
  learningProgress  LearningProgress[]
  StudySession      StudySession[]

  @@map("user")
}

model Theme {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  userId           String            @map("user_id")
  title            String
  user             User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  content          Content[]
  learningProgress LearningProgress?
  StudySession     StudySession[]

  @@map("theme")
}

model Content {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  themeId               String                  @map("theme_id")
  sentence              String
  translation           String
  transcription         String?
  lernedCounts          Int                     @default(0) @map("learned_counts")
  hasLearned            Boolean                 @default(false) @map("has_learned")
  exampleSentences      String[]                @map("example_sentences")
  imageUrl              String?                 @map("image_url")
  theme                 Theme                   @relation(fields: [themeId], references: [id], onDelete: Cascade)
  SelectTrueTranslation SelectTrueTranslation[]

  @@map("content")
}

model LearningProgress {
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  userId        String    @map("user_id")
  themeId       String    @id @unique @map("theme_id")
  wordsLearned  Int       @default(0) @map("words_learned")
  accuracyRate  Int?      @default(0) @map("accuracy_rate")
  lastStudiedAt DateTime? @map("last_studied_at")
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  theme         Theme     @relation(fields: [themeId], references: [id], onDelete: Cascade)

  @@map("learning_progres")
}

model StudySession {
  id                     String                  @id @default(uuid())
  createdAt              DateTime                @default(now()) @map("created_at")
  updatedAt              DateTime                @updatedAt @map("updated_at")
  userId                 String                  @map("user_id")
  themeId                String                  @map("theme_id")
  user                   User                    @relation(fields: [userId], references: [id], onDelete: Cascade)
  theme                  Theme                   @relation(fields: [themeId], references: [id], onDelete: Cascade)
  selectTrueTranslations SelectTrueTranslation[]

  @@map("study_session")
}

model SelectTrueTranslation {
  id            String       @id @default(uuid())
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")
  sessionId     String       @map("session_id")
  contentId     String       @map("content_id")
  correctCount  Int          @default(0) @map("correct_count")
  wrongCount    Int          @default(0) @map("wrong_count")
  variations    String[]     @map("variations")
  sentence      String       @map("sentence")
  correctAnswer String       @map("correct_answer")
  studySession  StudySession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  content       Content      @relation(fields: [contentId], references: [id], onDelete: Cascade)

  @@map("select_true_translation")
}
