# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type LearningProgress {
  createdAt: DateTime!
  updatedAt: DateTime!
  userId: String
  themeId: String
  wordsLearned: Int!
  accuracyRate: Int
  lastStudiedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Theme {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  userId: String!
  title: String
  user: User
  learningProgress: LearningProgress!
}

type User {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  password: String!
  fullName: String
  profilePictureUrl: String
  themes: [Theme!]!
}

type AuthResponse {
  user: User!
  accessToken: String!
}

type TokensResponse {
  accessToken: String!
}

type Content {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  themeId: String!
  sentence: String!
  translation: String!
  lernedCounts: Int!
  hasLearned: Boolean!
  transcription: String
  exampleSentences: [String!]
  imageUrl: String
}

type QuizSession {
  itemsLeft: Int!
  totalItems: Int!
  themeId: String!
  sentence: String!
  contentId: String!
  variations: [Variations!]!
}

type Variations {
  translation: String!
}

type Result {
  correctAnswers: Int!
}

type ValidationResult {
  isCorrect: Boolean!
  correctTranslation: String!
}

type Query {
  findOne: User!
  themes: [Theme!]!
  theme(id: String!): Theme!
  getLearningProgress(themeId: String!): LearningProgress!
  variations(themeId: String!): QuizSession!
  result(themeId: String!): Result!
  contents(themeId: String!): [Content!]!
  content_length(themeId: String!): Int!
  content(themeId: String!, id: String!): Content!
}

type Mutation {
  update_user(updateUserDto: UpdateUserDto!): User!
  login(loginDto: CreateUserDto!): AuthResponse!
  register(registerDto: CreateUserDto!): AuthResponse!
  tokens: TokensResponse!
  logout: Boolean!
  new_theme: Theme!
  update_theme(updateThemeDto: UpdateThemeDto!): Theme!
  delete_one_or_more_theme(ids: [String!]!): Int!
  updateLearningProgress(updateLearningProgressDto: UpdateLearningProgressDto!): LearningProgress!
  restart(themeId: String!): Boolean!
  validate(validateQuizDto: ValidateQuizDto!): ValidationResult!
  new_content(createContentDto: CreateContentDto!): Content!
  new_contents(createManyContentDto: CreateManyContentDto!): Int!
  update_content(updateContentDto: UpdateContentDto!): Content!
  delete_many_content(ids: [String!]!, themeId: String!): Int!
  delete_content(id: String!, themeId: String!): Content!
}

input UpdateUserDto {
  email: String
  password: String
  fullName: String
}

input CreateUserDto {
  email: String!
  password: String!
  fullName: String
}

input UpdateThemeDto {
  id: String!
  title: String
}

input UpdateLearningProgressDto {
  themeId: String!
  wordsLearned: Int
  accuracyRate: Int
  lastStudiedAt: DateTime
}

input ValidateQuizDto {
  themeId: String!
  translation: String!
  contentId: String!
}

input CreateContentDto {
  sentence: String!
  translation: String!
  exampleSentences: [String!]
  imageUrl: String
  themeId: String!
  transcription: String
}

input CreateManyContentDto {
  themeId: String!
  data: [CreateContentManyDataInput!]!
}

input CreateContentManyDataInput {
  sentence: String!
  translation: String!
  transcription: String
}

input UpdateContentDto {
  id: String!
  exampleSentences: [String!]
  imageUrl: String
  sentence: String!
  themeId: String!
  transcription: String
  translation: String!
  lernedCounts: Int
  hasLearned: Boolean
}